---
title: "Sprawozdanie 2. Grupa 3. Testowanie hipotez statystycznych"
author: "Emil Olszewski, Jakub Kempa"
format: pdf
editor: visual
---

# 1. Wprowadzenie

Będziemy testować hipotezy statystyczne na poziomie istotności $\alpha = 0.05$. Przestestujemy hipotezę

$$
 H_0: \mu = 1
$$

przeciwko

$$
H_1: \mu \ne 1
$$

Wykorzystamy następujące testy:

-   **test z** przy założeniu $\sigma = 2$

-   **test t-Studenta**

-   **test rang znakowanych Wilcoxona**

```{r}
#| echo: false
#| waring: false
library(tidyverse)
library(stats)
```

## 1.1 Wstęp do hipotezy zerowej

\
Testowanie hipotezy statystycznej $H_0: \mu = 1$ na poziomie istotności $\alpha = 0.05$, to procedura, która ma na celu ocenę czy średnia wartość z analizowanych danych $\mu$ różni się od przyjętej wartości $1$. Poziom istotności $\alpha = 0.05$ oznacza, że jesteśmy w stanie zaakceptować $5\%$ ryzyko, że popełnimy błąd pierwszego rodzaju. Rozróżnia się dwa takie błędy:

-   Błąd pierwszego rodzaju - fałszywe odrzucenie hipotezy zerowej\
    Wiąże się on z nieprawidłowym odrzuceniem hipotezy mówiącej w naszym przypadku o tym, że średnia jest równa 1

-   Błąd drugiego rodzaju - fałszywe zaakceptowanie hipotezy zerowej\
    W tym przypadku nie odrzucamy hipotezy zerowej, mimo że powinniśmy

Badając hipotezę zerową będziemy korzystali z wyżej wymienionych testów. Procedura prezentuje się następująco:

1.  Generujemy 100 wartości z rozkładu normalnego $\mathcal{N}(\mu, 2^2)$.

2.  Przeprowadzamy testy statystyczne dla wygenerowanego zestawu danych.

3.  Liczymy empiryczną moc testu (prawdopodobieństwo odrzucenia hipotezy zerowej).

4.  Powtarzamy kroki 1. - 3. $MC = 1000$ razy.

5.  Rysujemy wykres funkcji mocy w zależności od $\mu$ na przedziale $(-1, 3)$.

## 1.2 Teoria

Tutaj dopisze wzorki i je wyjasnie, ale to pozniej

```{r}
#| echo: false 

## STATYSTKI 

# Test Z 
stat_z <- function(xs, mu, sigma) {
  # Statystyka ta ma rozkład N(0, 1) przy założeniu hipotezy zerowej
  zstat <- sqrt(length(xs)) * (mean(xs) - mu) / sigma
  return(zstat)
}

# Test t-Studenta
stat_student <- function(xs, mu) {
  # Statystyka ta ma rozkład T(length(xs) - 1) przy założeniu hipotezy zerowej
  tstat <- sqrt(length(xs)) * (mean(xs) - mu) / sd(xs)
  return(tstat)
}

# Test rang znakowanych Wilcoxona
stat_wilcoxon <- function(xs, mu) {
  
  diffs <- xs - mu
  ranks <- rank(abs(diffs))
  
  sum_pos <- sum(ranks[diffs > 0])
  sum_neg <- sum(ranks[diffs < 0])
  
  # Rozkład tej statystyki jest znany (przy założeniu hipotezy zerowej jest on asymptotycznie normalny)
  ustat <- min(sum_pos, sum_neg)
  return(ustat)
}
```

```{r}
#| echo: false 

## TESTY 

testinfo <- function(stat, pval, resu) {
  return(list(
    statystyka = stat,
    pwartosc   = pval,
    wynik      = resu
  ))
}

# Test Z 

ztest <- function(xs, mu, alpha=0.05) {
  
  z <- stat_z(xs, mu, 2) 
  
  lower_q <- qnorm(alpha/2)
  upper_q <- qnorm(1 - alpha/2)
  
  result <- (lower_q <= z && z <= upper_q)
  p_value <- 2 * pnorm(abs(z), lower.tail = FALSE)
  
  
  return(testinfo(z, p_value, result))
  
}

# Test t-Studenta 

ttest <- function(xs, mu, alpha=0.05) {
  
  t <- stat_student(xs, mu)
  df <- length(xs) - 1
  
  lower_q <- qt(alpha/2, df)
  upper_q <- qt(1 - alpha/2, df)
  
  result <- (lower_q <= t && t <= upper_q)
  p_value <- 2 * pt(abs(t), df, lower.tail = FALSE)
  
  return(testinfo(t, p_value, result))
}

# Test znakowanych rang Wilcoxona 

wtest <- function(xs, mu, alpha=0.05) {
  
  w <- stat_wilcoxon(xs, mu)
  n <- length(xs)
  
  lower_q <- qsignrank(alpha/2, n)
  upper_q <- qsignrank(1 - alpha/2, n)
  
  result <- (lower_q <= w && w <= upper_q)
  p_value <- min(2 * psignrank(w-1, n, lower.tail=FALSE, 1))
  
  return(testinfo(w, p_value, result))
}

```

```{r}
#| echo: false

## WYKRESY FUNKCJI MOCY
plot_test_power <- function(dist, n, param, inter, MCS=100) {
  
  gensample <- if (dist == "norm") {
    function(mu) {
      return(rnorm(n, mu, param))
    }
  } else {
    function(lambda) {
      return(rexp(n, 1/lambda))
    }
  }

  ilen = length(inter)
  
  z_power <- numeric(ilen)
  t_power <- numeric(ilen)
  w_power <- numeric(ilen)
  
  for (i in seq_along(inter)) {
    
    mu = inter[i]
    
    z_correct <- MCS
    t_correct <- MCS
    w_correct <- MCS
    
    for (j in seq_len(MCS)) {
      sample <- gensample(mu)
      z_correct = z_correct - ztest(sample, 1)$wynik
      t_correct = t_correct - ttest(sample, 1)$wynik
      w_correct = w_correct - wtest(sample, 1)$wynik
    }
    
    z_power[i] = z_correct / MCS
    t_power[i] = t_correct / MCS
    w_power[i] = w_correct / MCS
    
    
  }
  
  values <- data.frame(
    mu = inter, 
    z = z_power, 
    t = t_power, 
    w = w_power
  )
  
  df_long <- tidyr::gather(values, key = "variable", value = "value", -mu)

  # Plot each column against mu
  ggplot(df_long, aes(x = mu, y = value, color = variable)) +
    geom_line() +
    labs(x = "mu", y = "Value", title = "Plot of z, t, w vs. mu") +
    scale_color_manual(values = c("z" = "blue", "t" = "green", "w" = "red"))  
}

```

# Zadanie 1

```{r}
plot_test_power("norm", 100, 2, seq(-1, 3, length.out=50), MCS=1000)
```

```{r}
plot_test_power("norm", 100, 4, seq(-1, 3, length.out=50), MCS=1000)
```

```{r}
plot_test_power("exp", 100, NULL, seq(0, 2, length.out=50), MCS=1000)
```
